@page "/ElectionStatistics"
@using ElectionAppLibrary.Models
@using ElectionAppLibrary.DataAccess
@inject IRepData _db

<div class="banner-container">
    <img src="banner2.png" alt="Banner" class="banner-image" />
    <h1 class="page-title"><b>Election Statistics</b></h1>
</div>

@if(reps is null)
{
    <p>Loading...</p>
}
else
{
    <div class="rep-stats">
        <h3 style="text-align: center">Representative Makeup</h3>
        <div id="pie-chart"></div>
        <div style="display: flex; white-space: pre;">
            <div class="box" style="background-color: blue"></div><b> Democrat: </b> @democrat%<br />
        </div>
        <div style="display: flex; white-space: pre;">
            <div class="box" style="background-color: red;"></div><b> Republican: </b> @republican%<br />
        </div>
        <div style="display: flex; white-space: pre;">
            <div class="box" style="background-color: green;"></div><b> Other: </b> @other%<br />
        </div>

    </div>
}

<style>
    .banner-container {
        position: relative;
        width: 100%;
        max-width: 100vw;
        height: auto;
        overflow: hidden;
        justify-content: stretch;
        margin-bottom: 40px;
    }

    .banner-image {
        width: 100vw;
        height: auto;
        display: block;
        opacity: 0.3;
    }

    .page-title {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: black;
        font-size: 5vw;
        z-index: 2;
        text-align: center;
    }

    #pie-chart {
        height: 50vw;
        width: 50vw;
        border-radius: 50%;
        background: conic-gradient(blue 0.00% @dem, red @dem @repub, green @repub);
        margin: auto;
    }

    .box {
        height: 20px;
        width: 20px;
    }

</style>
@code {
    private List<RepModelDB> reps = new List<RepModelDB>();
    private double democrat, republican, other;
    private string dem, repub, oth;
    protected override async Task OnInitializedAsync()
    {
        reps = await _db.GetReps();
        repRatio();
    }

    private void repRatio()
    {
        democrat = 0;
        republican = 0;
        other = 0;
        double len = reps.Count();
        foreach (RepModelDB rep in reps)
        {
            if (rep.party == "Democratic Party") ++democrat;
            else if (rep.party == "Republican Party") ++republican;
            else ++other;
        }
        democrat = democrat / len * 100;
        republican = republican / len * 100;
        other = other / len * 100;
        dem = $"{democrat}%";
        repub = $"{republican + democrat}%";
        oth = $"{other + republican + democrat}%";
    }

}
